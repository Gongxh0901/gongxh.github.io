# Cursor 项目协作规则（重制版）

本规则适用于本仓库的日常协作与自动化助手（AI/插件）行为约束。除非明确说明，以下规则均为默认强制要求。

## 基本原则
- 清晰、可追溯、最小必要变更。
- 遵循当前代码风格与信息架构，不做无关重构。
- 优先保证站点可构建，其次优化表现与内容。

## 工作流约束（重要）
- 修改代码或文案后：不要执行任何提交（commit）或推送（push）。等待我明确指令再进行。
- 当我要求提交时：
  - 使用中文提交信息，聚焦改动意图与影响（不需过度细节）。
  - 不要合并或变基，只做普通提交。
- 不要自动启动本地测试、构建或服务。例如：npm 脚本、bundler、Jekyll、预览服务器等。
  - 仅在我明确要求时，才运行如 `bundle exec jekyll build`/`serve` 等命令。

## 内容与文案
- 保持与站点定位一致：游戏开发、Cocos Creator、工具链、性能优化。
- 面向用户的文案：
  - 标题精炼，副标题点明亮点；首段给出关键信息与价值。
  - 中文标点与空格规范（中英文间加空格，专有名词保留英文，如 Cocos Creator、TypeScript、Roguelike、TPS）。
  - 奖项、评分等可信信息需明确来源与年份（例如：TapTap 9.4，2018 年豌豆荚年度游戏设计奖，2018 年 OPPO 开发者大会最佳星火游戏奖）。

## 结构与文件
- Jekyll 站点：
  - 配置：`_config.yml` 与 `_config_dev.yml` 按环境分离，避免互相污染。
  - 布局与包含：优先复用 `_layouts/` 与 `_includes/`，保持组件化。
  - 文章与页面：文章在 `_posts/`，页面在根或 `about.markdown` 等；Front Matter 完整。
- 资源：`assets/` 下按类型与页面归档；避免无用资源与超大文件。

## 代码与样式
- 不擅自更改全站样式变量与排版规则；新增样式遵循现有命名与层级。
- JavaScript 仅做与当前需求相关的最小增强；避免引入新依赖。
- 对外链接使用带描述的 Markdown 链接或安全属性（target/_blank, rel=noopener）。

## 可访问性与 SEO
- 图片包含合理 `alt`；标题层级有序。
- 页面包含 `title` 与 `description`，避免关键词堆砌。
- 不在未声明的页面启用分页或实验性功能。

## 变更说明要求
- 每次编辑请在提交信息中侧重“为什么”，避免只描述“做了什么”。
- 若编辑为视觉/样式层面，简述影响范围（组件/页面）。

## 质量与回滚
- 禁止批量改名或结构大迁移，除非有明确迁移计划。
- 如修改影响构建（Jekyll/Liquid/Front Matter），需在我要求时进行一次构建验证。

## 交互约束（对助手）
- 如需查找或修改文件，先定位、再最小范围编辑。
- 不创建新分支、不推送远程。
- 不自动生成过长或不相关的文档文件。

---
备注：以上“不要提交/不推送、不自动启动本地测试或服务、提交使用中文描述”的规则优先级最高；仅在我显式指令后才可执行对应操作。